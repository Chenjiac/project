<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PaperMapper">
	
	<!--表名 -->
	<sql id="tableName">
		BETA_UNROLLING_PAPER
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		PAPER_ID,
		GENERAL_ARCHIVE,	
		ROOM_NUM,	
		LIBRARY_NUM,	
		ROOM_CODE,	
		LIBRARY_CODE,	
		STORAGE_YEAR,	
		SECTION,
		STORAGE_TIME,	
		PAPER_NUM,
		PAPER_NAME,
		PAPER_RESPONSIBLER,
		PAPER_DATE,	
		PAPER_PAGE,	
		SECRET_LEVEL,	
		COMPANY_NAME,	
		PAPER_DESCRIPTION,
		ZERO
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{PAPER_ID},
		#{GENERAL_ARCHIVE},	
		#{ROOM_NUM},	
		#{LIBRARY_NUM},	
		#{ROOM_CODE},	
		#{LIBRARY_CODE},	
		#{STORAGE_YEAR},	
		#{SECTION},
		#{STORAGE_TIME},	
		#{PAPER_NUM},	
		#{PAPER_NAME},	
		#{PAPER_RESPONSIBLER},	
		#{PAPER_DATE},	
		#{PAPER_PAGE},	
		#{SECRET_LEVEL},	
		#{COMPANY_NAME},	
		#{PAPER_DESCRIPTION},
		#{ZERO}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		GENERAL_ARCHIVE,
		ROOM_NUM,
		LIBRARY_NUM,
		ROOM_CODE,
		LIBRARY_CODE,
		STORAGE_YEAR,
		SECTION,
		STORAGE_TIME,
		PAPER_NUM,
		PAPER_NAME,
		PAPER_RESPONSIBLER,
		PAPER_DATE,
		PAPER_PAGE,
		SECRET_LEVEL,
		PAPER_DESCRIPTION
		) values (
		#{GENERAL_ARCHIVE},
		#{ROOM_NUM},
		#{LIBRARY_NUM},
		#{ROOM_CODE},
		#{LIBRARY_CODE},
		#{STORAGE_YEAR},
		#{SECTION},
		#{STORAGE_TIME},
		#{PAPER_NUM},
		#{PAPER_NAME},
		#{PAPER_RESPONSIBLER},
		#{PAPER_DATE},
		#{PAPER_PAGE},
		#{SECRET_LEVEL},
		#{PAPER_DESCRIPTION}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where
		PAPER_ID = #{PAPER_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			PAPER_ID = #{PAPER_ID},
			GENERAL_ARCHIVE = #{GENERAL_ARCHIVE},
			ROOM_NUM = #{ROOM_NUM},
			LIBRARY_NUM = #{LIBRARY_NUM},
			ROOM_CODE = #{ROOM_CODE},
			LIBRARY_CODE = #{LIBRARY_CODE},
			STORAGE_YEAR = #{STORAGE_YEAR},
			SECTION = #{SECTION},
			STORAGE_TIME = #{STORAGE_TIME},
			PAPER_NUM = #{PAPER_NUM},
			PAPER_NAME = #{PAPER_NAME},
			PAPER_RESPONSIBLER = #{PAPER_RESPONSIBLER},
			PAPER_DATE = #{PAPER_DATE},
			PAPER_PAGE = #{PAPER_PAGE},
			SECRET_LEVEL = #{SECRET_LEVEL},
			PAPER_DESCRIPTION = #{PAPER_DESCRIPTION}
		where
		PAPER_ID = #{PAPER_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where
		PAPER_ID = #{PAPER_ID}
	</select>

	<!-- 通过Library_num获取数据 -->
	<select id="findByNUM" parameterType="pd" resultType="pd">
		SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE
		LIBRARY_NUM = #{LIBRARY_NUM}
	</select>


	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		PAPER_ID AS ID,
		GENERAL_ARCHIVE,
		ROOM_NUM,
		LIBRARY_NUM,
		ROOM_CODE,
		LIBRARY_CODE,
		STORAGE_YEAR,
		SECTION,
		STORAGE_TIME,
		PAPER_NUM AS NUM,
		PAPER_NAME AS NAME,
		PAPER_RESPONSIBLER AS RES,
		PAPER_DATE,
		PAPER_PAGE,
		SECRET_LEVEL,
		COMPANY_NAME,
		PAPER_DESCRIPTION AS DES,
		ZERO
		from 
		BETA_UNROLLING_PAPER
		where 1=1

		<if test="pd.NAME!= null and pd.NAME != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件  -->
			PAPER_NAME LIKE CONCAT(CONCAT('%', #{pd.NAME}),'%')
				)
		</if>
		<if test="pd.STORAGE_YEAR!= null and pd.STORAGE_YEAR != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件  -->
			STORAGE_YEAR LIKE CONCAT(CONCAT('%', #{pd.STORAGE_YEAR}),'%')
			)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
		PAPER_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	

</mapper>